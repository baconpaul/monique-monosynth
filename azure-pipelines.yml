# Hacky secret project 3

trigger:
- main

pr:
- main

jobs:
- job: Build
  strategy:
    matrix:
      mac:
        imageName: 'macos-10.15'
        isMac: True
        cmakeArgs: -D"CMAKE_OSX_ARCHITECTURES=arm64;x86_64"
      win:
        imageName: 'windows-2019'
        isWindows: True
        cmakeArgs: -A x64
      lin:
        imageName: 'ubuntu-20.04'
        isLinux: True
        cmakeArgs:

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    fetchDepth: 1
    # submodules: recursive # can't do submodules here b'cuz depth=1 fails with Github

  - bash: |
      set -e

      sudo apt-get update

      sudo apt-get install -y \
          devscripts \
          libxcb-cursor-dev \
          libxcb-keysyms1-dev \
          libxcb-util-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          ninja-build \
          xcb \
          libgtk-3-dev \
          libwebkit2gtk-4.0 \
          libwebkit2gtk-4.0-dev \
          libcurl4-openssl-dev \
          alsa \
          alsa-tools \
          libasound2-dev \
          libjack-dev \
          libfreetype6-dev \
          libxinerama-dev \
          libxcb-xinerama0 \
          libxinerama1 \
          x11proto-xinerama-dev \
          libxrandr-dev \
          libgl1-mesa-dev \
          libxcursor-dev \
          libxcursor1 \
          libxcb-cursor-dev \
          libxcb-cursor0

    condition: variables.isLinux
    displayName: linux - run apt-get


  - bash: |
      git submodule update --depth 1 --init --recursive
    displayName: Get SubModules

  - bash: |
      echo cmake -Bbuild -DCMAKE_BUILD_TYPE=Debug $(cmakeArgs)
      cmake -Bbuild -DCMAKE_BUILD_TYPE=Debug $(cmakeArgs)
    displayName: Run CMake (Debug)
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - bash: |
      cmake -Bbuild -DCMAKE_BUILD_TYPE=Release ${cmakeArgs}
    displayName: Run CMake (Release)
    condition: not(eq(variables['Build.Reason'], 'PullRequest'))

  - bash: |
      cmake --build build --config Debug --target monique-installer
    displayName: Build Monique Installer

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'INSTALLER_MAC_DIST'
      targetPath: 'build/installer'
    condition: and(variables.isMac,not(eq(variables['Build.Reason'], 'PullRequest')))
    displayName: mac - publish mac zip

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'INSTALLER_WIN_DIST'
      targetPath: 'build/installer'
    condition: and(variables.isWindows,not(eq(variables['Build.Reason'], 'PullRequest')))
    displayName: win - publish win zip

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'INSTALLER_LIN_DIST'
      targetPath: 'build/installer'
    condition: and(variables.isLinux,not(eq(variables['Build.Reason'], 'PullRequest')))
    displayName: win - publish lin zip

